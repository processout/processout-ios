import Foundation
import UIKit

// swiftlint:disable all
{% for type in types.implementing.POAutoCompletion|protocol %}

extension {{ type.name }} {
    {% for method in type.methods %}
        {% if not method.isAsync %}
            {% continue %}
        {% endif %}

    {% for documentation in method.documentation %}
    /// {{ documentation }}
    {% endfor %}
    {% for key, value in method.attributes %}
    {{ value.first }}
    {% endfor %}
    @discardableResult
    public func {{ method.callName }}(
        {% for parameter in method.parameters %}
        {{ parameter.asSource }},
        {% endfor %}
        completion: @escaping ({% if method.throws %}Result<{{ method.returnTypeName.asSource }}, POFailure>{% else %}{{ method.returnTypeName.asSource }}{% endif %}) -> Void
    ) -> POCancellable {
        invoke(completion: completion) {
            {% if method.throws %}try {% endif %}await {{ method.callName }}({% for parameter in method.parameters %}{% if parameter.argumentLabel %}{{ parameter.argumentLabel }}: {% endif %}{{ parameter.name }}{% if not forloop.last %}, {% endif %}{% endfor %})
        }
    }
    {% endfor %}
}
{% endfor %}
