// MARK: - AutoStringRepresentable
{% for enum in types.enums|annotated:"AutoStringRepresentable" %}

extension {{ enum.name }}: RawRepresentable {

    {{ enum.accessLevel }} init(rawValue: String) {
        switch rawValue {
        {% for case in enum.cases where case.name != "unknown" %}
        case "{{ case.annotations.rawValue|default:case.name|replace:"`","" }}":
            self = .{{ case.name }}
        {% endfor %}
        default:
            self = .unknown(rawValue)
        }
    }

    {{ enum.accessLevel }} var rawValue: String {
        switch self {
        {% for case in enum.cases where case.name != "unknown" %}
        case .{{ case.name }}:
            return "{{ case.annotations.rawValue|default:case.name|replace:"`","" }}"
        {% endfor %}
        case .unknown(let rawValue):
            return rawValue
        }
    }
}
{% endfor %}
